/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define DEFAULT 0
#define SYM_1 1
#define SYM_2 2
#define MAGIC 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | RCTRL | LGUI | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
  &kp F1     &kp F2    &kp F3   &kp F4    &kp F5                                                                                         &kp F6  &kp F7     &kp F8    &kp F9    &kp F10 &kp EQUAL  &kp N1    &kp N2   &kp N3    &kp N4     &kp N5                                                                      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
  &kp TAB    &kp Q     &kp W    &kp E     &kp R      &kp T                                                                       &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
  &kp ESC    &kp A     &kp S    &kp D     &kp F      &kp G                                                                       &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
  &kp GRAVE  &kp Z     &kp X    &kp C     &kp V      &kp B   &kp LSHFT  &kp LCTRL  &kp DELETE    &kp RCTRL  &kp LGUI  &kp RSHFT  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
  &mo MAGIC      &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp BSPC   &mo SYM_1      &kp LALT      &kp RALT   &kp RET   &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        symbols_1 {
            bindings = <
&none  &none             &none        &none                  &none                                                                                      &none         &none              &none      &none      &none
&none  &none             &none        &none                  &none            &none                                                          &none      &none         &none              &none      &none      &none
&none  &kp N1            &kp N2       &kp N3                 &kp N4           &kp N5                                                         &kp N6     &kp N7        &kp N8             &kp N9     &kp N0     &none
&none  &kp LESS_THAN     &kp PERCENT  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET                                               &kp EQUAL  &kp QUESTION  &kp SQT            &kp PLUS   &kp STAR   &none
&none  &kp GREATER_THAN  &kp DOLLAR   &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &none  &none  &none    &none  &none  &none  &kp AMPS   &kp EXCL      &kp DOUBLE_QUOTES  &kp MINUS  &kp SLASH  &none
&none  &none             &none        &none                  &none                               &none  &mo SYM_2  &none    &none  &none  &none             &none         &none              &none      &none      &none
            >;
        };

        symbols_2 {
            bindings = <
&none  &none  &none      &none          &none                                                                    &none  &none  &none  &none  &none
&none  &none  &none      &none          &none       &none                                                 &none  &none  &none  &none  &none  &none
&none  &none  &kp CARET  &kp UNDER      &kp DOLLAR  &kp HASH                                              &none  &none  &none  &none  &none  &none
&none  &none  &kp TILDE  &kp BACKSLASH  &kp PIPE    &kp AMPS                                              &none  &none  &none  &none  &none  &none
&none  &none  &none      &none          &none       &none     &none  &none  &none    &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none      &none          &none                 &none  &none  &none    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &none
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
    };
};
